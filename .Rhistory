library(FEMr)
order = 1
mesh<-create.MESH.2D(nodes=rbind(c(0, 0), c(0, 1), c(0.5, 0.5), c(1, 1), c(1, 0)),
segments=rbind(c(1, 2), c(2, 3), c(3, 4), c(4, 5), c(5, 1)), order = order)
FEMbasis = create.FEM.basis(mesh, order)
lambda = c(1,2,3)
locations = rbind(c(0, 0), c(0, 1), c(0.5, 0.5), c(1, 1), c(1, 0))
observations = c(1,2,1,2,1)
data = c(1,2,1,2,1)
covariates = cbind(c(1, 2, 3, 4, 5))
BC = NULL
output_R = smooth.FEM.basis(locations  = locations,
observations = data,
FEMbasis = FEMbasis, lambda = lambda,
covariates = covariates,
GCV = TRUE,
CPP_CODE = FALSE)
print(output_R$fit.FEM$coeff)
data("mesh.2D.rectangular")
plot(mesh.2D.rectangular)
data("mesh.2D.rectangular")
load("/home/el425/git/FEMr/data/mesh.2D.rectangular.rda")
mesh.2D.rectangular
class(mesh.2D.rectangular) = "MESH2D"
mesh.2D.rectangular
save(mesh.2D.rectangular)
save(file = "mesh.2D.rectangular.rda", mesh.2D.rectangular)
data("/home/el425/git/FEMr/data/mesh.2D.simple.rda")
data("mesh.2D.simple")
class(mesh.2D.simple)="MESH2D"
save(file = "mesh.2D.simple.rda", mesh.2D.simple)
ls
ls()
setwd("/mhome/stats/s/el425/git/FEMr/R")
setwd("/mhome/stats/s/el425/git/FEMr")
library(FEMr)
data(mesh.2D.rectangular)
mesh.2D.rectangular
observations = sin(0.2*pi*mesh.2D.rectangular$nodes[,1]) + rnorm(n = nrow(mesh.2D.rectangular$nodes), sd = 0.1)
FEMbasis = create.FEM.basis(mesh.2D.rectangular, 2)
lambda = c(10^-2)
K_func<-function(points)
{
mat<-c(0.01,0,0,1)
as.vector(0.5*mat %*% t(points[,1]^2))
}
b_func<-function(points)
{
rep(c(0,0), nrow(points))
}
c_func<-function(points)
{
rep(c(0), nrow(points))
}
u_func<-function(points)
{
rep(c(0), nrow(points))
}
PDE_parameters = list(K = K_func, b = b_func, c = c_func, u = u_func)
FEM_CPP_PDE_SV = smooth.FEM.PDE.SV.basis(observations = observations,
FEMbasis = FEMbasis, lambda = lambda, PDE_parameters = PDE_parameters)
print(FEM_CPP_PDE_SV$fit.FEM$coeff)
## - C++ code
library(FEMr)
data(mesh.2D.simple)
observations = sin(pi*mesh.2D.simple$nodes[,1]) + rnorm(n = nrow(mesh.2D.simple$nodes), sd = 0.1)
FEMbasis = create.FEM.basis(mesh.2D.simple, 2)
lambda = c(10^-2, 10^-1, 0.5, 5, 10)
PDE_parameters_anys = list(K = matrix(c(0.01,0,0,1), nrow = 2), b = c(0,0), c = 0)
FEM_CPP_PDE = smooth.FEM.PDE.basis(observations = observations,
FEMbasis = FEMbasis,
lambda = lambda,
PDE_parameters = PDE_parameters_anys)
print(FEM_CPP_PDE$fit.FEM$coeff)
print(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
library(FEMr)
order = 1
mesh<-create.MESH.2D(nodes=rbind(c(0, 0), c(0, 1), c(0.5, 0.5), c(1, 1), c(1, 0)),
segments=rbind(c(1, 2), c(2, 3), c(3, 4), c(4, 5), c(5, 1)), order = order)
FEMbasis = create.FEM.basis(mesh, order)
lambda = c(1,2,3)
locations = rbind(c(0, 0), c(0, 1), c(0.5, 0.5), c(1, 1), c(1, 0))
observations = c(1,2,1,2,1)
data = c(1,2,1,2,1)
covariates = cbind(c(1, 2, 3, 4, 5))
BC = NULL
output_R = smooth.FEM.basis(locations  = locations,
observations = data,
FEMbasis = FEMbasis, lambda = lambda,
covariates = covariates,
GCV = TRUE,
CPP_CODE = FALSE)
print(output_R$fit.FEM$coeff)
plot(output_R$fit.FEM)
## - C++ code
library(FEMr)
order = 1
mesh<-create.MESH.2D(nodes=rbind(c(0, 0), c(0, 1), c(0.5, 0.5), c(1, 1), c(1, 0)),
segments=rbind(c(1, 2), c(2, 3), c(3, 4), c(4, 5), c(5, 1)), order = order)
FEMbasis = create.FEM.basis(mesh, order)
lambda = c(1,2,3)
locations = rbind(c(0, 0), c(0, 1), c(0.5, 0.5), c(1, 1), c(1, 0))
observations = c(1,2,1,2,1)
data = c(1,2,1,2,1)
covariates = cbind(c(1, 2, 3, 4, 5))
BC = NULL
output_CPP = smooth.FEM.basis(locations  = as.matrix(locations),
observations = data,
FEMbasis = FEMbasis, lambda = lambda,
covariates = covariates,
GCV = TRUE,
CPP_CODE = TRUE)
print(output_CPP$fit.FEM$coeff)
plot(output_CPP$fit.FEM)
## - C++ code
library(FEMr)
data(mesh.2D.simple)
observations = sin(pi*mesh.2D.simple$nodes[,1]) + rnorm(n = nrow(mesh.2D.simple$nodes), sd = 0.1)
FEMbasis = create.FEM.basis(mesh.2D.simple, 2)
lambda = c(10^-2, 10^-1, 0.5, 5, 10)
PDE_parameters_anys = list(K = matrix(c(0.01,0,0,1), nrow = 2), b = c(0,0), c = 0)
FEM_CPP_PDE = smooth.FEM.PDE.basis(observations = observations,
FEMbasis = FEMbasis,
lambda = lambda,
PDE_parameters = PDE_parameters_anys)
print(FEM_CPP_PDE$fit.FEM$coeff)
## This script tests
## - PDE smoothing
## - 2nd order FEs
## - C++ code
library(FEMr)
data(mesh.2D.simple)
observations = sin(pi*mesh.2D.simple$nodes[,1]) + rnorm(n = nrow(mesh.2D.simple$nodes), sd = 0.1)
FEMbasis = create.FEM.basis(mesh.2D.simple, 2)
lambda = c(10^-2, 10^-1, 0.5, 5, 10)
PDE_parameters_anys = list(K = matrix(c(0.01,0,0,1), nrow = 2), b = c(0,0), c = 0)
FEM_CPP_PDE = smooth.FEM.PDE.basis(observations = observations,
FEMbasis = FEMbasis,
lambda = lambda,
PDE_parameters = PDE_parameters_anys)
print(FEM_CPP_PDE$fit.FEM$coeff)
plot(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
plot(FEM_CPP_PDE$fit.FEM)
FEM_CPP_PDE$fit.FEM
mesh.2D.simple
mesh.2D.simple
mesh.2D.simple
mesh.2D.simple
mesh.2D.simple$nodes
load("/home/el425/git/FEMr/data/mesh.2D.simple.rda")
mesh.2D.simple
mesh.2D.simple$nodes
library(FEMr)
data(mesh.2D.simple)
observations = sin(pi*mesh.2D.simple$nodes[,1]) + rnorm(n = nrow(mesh.2D.simple$nodes), sd = 0.1)
FEMbasis = create.FEM.basis(mesh.2D.simple, 2)
lambda = c(10^-2, 10^-1, 0.5, 5, 10)
PDE_parameters_anys = list(K = matrix(c(0.01,0,0,1), nrow = 2), b = c(0,0), c = 0)
FEM_CPP_PDE = smooth.FEM.PDE.basis(observations = observations,
FEMbasis = FEMbasis,
lambda = lambda,
PDE_parameters = PDE_parameters_anys)
print(FEM_CPP_PDE$fit.FEM$coeff)
FEM_CPP_PDE$fit.FEM$FEMbasis
FEM_CPP_PDE$fit.FEM$FEMbasis
FEM_CPP_PDE$fit.FEM$FEMbasis
FEM_CPP_PDE$fit.FEM$FEMbasis$mesh
remove.packages("FEMr")
