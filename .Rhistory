install.packages("~/git/FEMr_0.1-1.tar.gz", repos = NULL, type = "source")
install.packages("~/git/FEMr_0.1-1.tar.gz", repos = NULL, type = "source")
install.packages("RcppEigen")
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
clear
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
remove.packages("fdaPDE")
install.packages("~/git/fdaPDE_0.1-1.tar.gz", repos = NULL, type = "source")
remove.packages("fdaPDE")
setwd("/mhome/stats/s/el425/git/fdaPDE/tests")
setwd("/mhome/stats/s/el425/git/fdaPDE")
setwd("/mhome/stats/s/el425/git")
library(devtools)
load_all(fdaPDE)
load_all("fdaPDE")
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
locations
mesh$nodes
observations
numnodes
locations
observations
is.matrix(observations)
is.matrix(locations)
is.matrix(covariates)
load_all("fdaPDE")
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
loc_nodes
locations
?lm.fit
observations
fnhat
locations
load_all("fdaPDE")
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
observations
fnhat[,i]
fnhat[,1]
beta
load_all("fdaPDE")
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
beta
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
beta
beta
betahat
betahat
betahat
betahat
betahat
lm.fit(covariates,as.vector(observations-fnhat[,i]))$coefficients
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
edf
observations
fnhat
source('/mhome/stats/s/el425/git/fdaPDE/R/fdaPDE.smoothing.R', echo=TRUE)
debugSource('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
load_all("fdaPDE")
source('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
output_CPP
output_CPP$beta
source('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
source('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
output_CPP$beta
load_all("fdaPDE/")
source('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
source('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
output_CPP$beta
load_all("fdaPDE/")
source('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
source('/mhome/stats/s/el425/git/fdaPDE/tests/testsmoothingbaseCPPcode.R', echo=TRUE)
output_CPP$beta
output_CPP$beta
proiva=list()
proiva[[1]] = 5
proiva
proiva[[2]] = 5
proiva
?create.MESH.2D
remove.packages("fdaPDE")
install.packages("~/git/fdaPDE_0.1-2.tar.gz", repos = NULL, type = "source")
setwd("~/git/fdaPDE/R")
setwd("~/git/fdaPDE")
roxygen2::roxygenise()
setwd("~/git/fdaPDE")
roxygen2::roxygenise()
remove.packages("fdaPDE")
install.packages("~/git/fdaPDE_0.1-2.tar.gz", repos = NULL, type = "source")
